"use strict";(self["webpackChunkshock"]=self["webpackChunkshock"]||[]).push([[448],{8601:function(e,l,o){o.r(l),o.d(l,{default:function(){return $}});var t=o(6901),n=o(8146),a=o(5572),c=o(4768),s=o(2504);const d=(0,t._)("div",{class:"h-1"},"基础运算符 · Base Operator",-1),u=(0,t._)("p",null," 运算在我们生活中是非常常见的，无论是数学这种理论学科，还是买菜这种日常情景，都有着运算的身影，而运算符则是指挥运算的总指挥，在JavaScript中就有着很多的运算符，我们今天就开始学习JavaScript的基础运算符。 ",-1),p=(0,t._)("p",{class:"h-3"},"运算符和N元运算符",-1),i=(0,t._)("p",null,"运算元和N元运算符（比如一元运算符）是两个常见的术语，其实很好理解：",-1),f=(0,t._)("p",{class:"list"}," 运算元 —— 运算符应用的对象，比如1+2中，1和2就是运算元，在编程之中也常被称为参数（尤其是非数字） ",-1),r=(0,t._)("p",{class:"list"}," N元运算符 —— 如果一个运算符拥有N个运算元，那它就是N元运算符，比如，1+2中，包含两个运算元（1和2），所以加号就是二元运算符 ",-1),U=(0,t.uE)('<p class="h-3">数学运算符</p><p> 在JavaScript中，你可以使用<code>+</code>加号<code data-help="key|%">-</code>减号<code>*</code>乘号<code>/</code>除号进行四则运算，这个比较常见，在此不在赘述，下面说两个不常见的。 </p><p class="list"><code>**</code>幂运算，如果记性好的话，应该记得我们在讲<code>NaN</code>时提到过NaN的零次方是1，其中用到的运算方法就是** </p>',3),m=(0,t._)("sup",null,"n",-1),S=(0,t._)("code",null,"^",-1),k=(0,t._)("p",{class:"list"},[(0,t._)("code",null,"%"),(0,t.Uk)("取余，就是求两数相除的余数")],-1),g=(0,t.uE)('<p class="h-3">一元运算符</p><p>一元运算符有两个：<code>+</code>一元正号和<code>-</code>一元负号</p><p>一元负号用于数字正负反转，而一元正号用于类型转换，将非数字类型转化为数字，关于类型转换我们将在后面详细讲解。</p><p class="h-3">自增/自减运算符</p><p>对一个数字加一或减一的运算符，这种运算在计数时很常见。</p><p class="list"><code>++</code>是自增运算符</p><p class="list"><code>--</code>是自减运算符</p><p> 自增和自减运算符只能用于变量，对数字字面量（如<code>3++</code>）则会报错 </p><p>自增和自减运算符可以置于变量前也可置于变量后，这两者的的返回值不同。</p>',9),_=(0,t._)("code",null,"a = 3 * b++ + b",-1),y=(0,t._)("code",null,"a = 3 * b; b++; a = a + b",-1),b=(0,t._)("p",{class:"h-3"},"赋值运算符",-1),w=(0,t._)("p",null,[(0,t._)("code",null,"="),(0,t.Uk)("也是一个运算符，它的优先级很低，仅高于逗号运算符")],-1),v=(0,t._)("p",null,[(0,t.Uk)("和其他运算符相同，"),(0,t._)("code",null,"="),(0,t.Uk)("也有返回值，它返回写入此变量的值")],-1),h=(0,t._)("p",null,"通过这个特性，我们可以实现链式赋值。",-1),V=(0,t.uE)('<p class="h-3">原地修改</p><p> 很多时候我们需要对一个变量进行运算并保存到这个变量中，如果只是加一减一，自增/自减运算符就可以胜任，然而更多的情况是较复杂的的运算，那我们需要这么写:<code>a = a * 3</code></p><p> 依普遍理性而论，这不是费力的事情，但是为了更省力，你可以使用原地修改，比如：<code>a *= 3</code></p><p> 没错，使用<code>*=</code>可以实现修改并赋值的效果，而你熟悉和不熟悉的二元运算符都有这种缩写，比如<code>+=</code> <code>-=</code> <code>/=</code> 效果与前面类似</p>',4),q=(0,t._)("p",null,[(0,t.Uk)(" 这类运算符的优先级很低（与"),(0,t._)("code",null,"="),(0,t.Uk)("相同），也就是说，在数字运算中，它是最后执行的 ")],-1),W=(0,t.uE)('<p class="h-3">typeof运算符</p><p>在上一章我们学习了数据类型，<code>typeof</code>运算符则用于获取值的数据类型</p><p>它的返回值有<code>&quot;string&quot;</code>、<code>&quot;function&quot;</code>、<code>&quot;object&quot;</code>、<code>&quot;undefined&quot;</code>、<code>&quot;symbol&quot;</code>、<code>&quot;boolean&quot;</code>、<code>&quot;bigint&quot;</code>、<code>&quot;number&quot;</code> 8种，代表7种数据类型以及函数</p><p>看到这你可能会很迷惑（老人地铁手机）为什么是七种？为什么没有null？为什么function不是数据类型的一种？</p>',4),C=(0,t._)("p",{class:"list"},[(0,t.Uk)("从上面从结果可以看出，"),(0,t._)("code",null,"typeof null"),(0,t.Uk)("的结果是"),(0,t._)("code",null,"object"),(0,t.Uk)("，但是null并不是对象。")],-1),Z=(0,t._)("p",{class:"list"},'function并不是一个数据类型，它属于特殊的object，但是typeof会对它进行区别对待，返回"function"',-1),N=(0,t._)("p",null,"有时你会看到typeof(...)的用法，你可能会很疑惑，typeof是函数吗？然而事实上，它不是。",-1),j=(0,t._)("p",null,"简单说，这个括号不是typeof的一部分，而是括号运算符，用于分组，这样做可以省略typeof与参数之间的空格。你可以选择任意一种写法，两者都是合法的",-1);var x={__name:"baseOperator",setup(e){const{nextTick:l,reactive:x}=o(6526),E=x([]);return E[0]="let a = 1, b = 2,c;\nc = -a; //一元负号，一元运算符，包含一个运算元，用于正负转换\nconsole.log(c)\nc = a + b //加号，二元运算符，包含两个运算元\nconsole.log(c)\nc = a ? b : c //三元运算符，用于逻辑运算，相当于if...else...这个在条件语句中会讲解\nconsole.log(c)",E[1]="console.log(4 ** 2) //4的平方\nconsole.log(4 ** (1 / 2) ) //也可以用分数\nconsole.log(16 ** 0.25 ) //也可以用小数",E[2]="console.log(9 % 2) // 9 / 2 = 4···1",E[3]="let a = 1, b = 1;\nconsole.log('后置形式的结果是：',a++); //后置返回的是旧值\nconsole.log('前置形式的结果是：',++b); //前置返回的是新值\nconsole.log('进行计算后的结果是：',`a = ${a}`, `b = ${b}`); //但是最后的结果一样",E[4]="let a;\nconsole.log(a = 3) // a = 3 的返回值是3",E[5]="let a, b, c, d;\na = b = c = d = 3;\nconsole.log(a, b, c, d)",E[6]="let a = 2;\na += 3; //a = a + 3\nconsole.log(a);\na -= 2; //a = a - 2\nconsole.log(a);\n//其他运算符类似",E[7]="let a = 3;\na *= 2 + 1; // a = a * (2 + 1)\nconsole.log(a);",E[8]='let a = 123; //Number\nlet b = 123n //BigInt\nlet c = "abc"; //String\nlet d = undefined; //undefined\nlet e = true;\nlet f = false; //Boolean\nlet g = null; //Null\nlet h = Symbol(); //Symbol\nlet i = function(){};\nlet j = {}; //object\n[a,b,c,d,e,f,g,h,i,j].forEach(val=>{\n  let result = typeof val;\n  if (result == "symbol"){\n    val = \'Symbol()\' //因为symbol不能被显示，所以使用字符串代替\n  }\n  console.log(val,"——>", result)\n}) ',E[9]="let a = 123\nconsole.log(typeof(a))\nconsole.log(typeof a) //这两个作用相同\nconsole.log(typeof console.log) //函数\n// consoel.log(typeof(typeof)) //去掉注释之后运行会报错",l().then((()=>{window.setEditor(),setTimeout((()=>{window.pageLoading.close()}),500)})),(e,l)=>((0,t.wg)(),(0,t.iD)(t.HY,null,[d,u,p,i,f,r,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[0],"onUpdate:modelValue":l[0]||(l[0]=e=>(0,n.SU)(E)[0]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("N元运算符")])),_:1},8,["modelValue"]),U,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[1],"onUpdate:modelValue":l[1]||(l[1]=e=>(0,n.SU)(E)[1]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("幂运算（x**n ==> x"),m,(0,t.Uk)("）")])),_:1},8,["modelValue"]),(0,t.Wm)((0,n.SU)(a.v),{style:{"margin-top":"15px"}},{default:(0,t.w5)((()=>[(0,t.Uk)("注意，幂运算符号不是"),S])),_:1}),k,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[2],"onUpdate:modelValue":l[2]||(l[2]=e=>(0,n.SU)(E)[2]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("取余（x%n ==> x/n = b ··· x%n）")])),_:1},8,["modelValue"]),g,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[3],"onUpdate:modelValue":l[3]||(l[3]=e=>(0,n.SU)(E)[3]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("运算符的前置与后置形式")])),_:1},8,["modelValue"]),(0,t.Wm)((0,n.SU)(a.v),{type:"warning",style:{"margin-top":"15px"}},{default:(0,t.w5)((()=>[(0,t.Uk)("虽然将自增运算符写入表达式内部是可行的，比如"),_,(0,t.Uk)("（相当于"),y,(0,t.Uk)("，但是显而易见，这是更难理解的，并且在生产环境中，多行代码不会影响代码执行效率和空间占用，打包编译工具（如webpack）会压缩你的代码，所以请尽量不要使用这种形式。")])),_:1}),b,w,v,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[4],"onUpdate:modelValue":l[4]||(l[4]=e=>(0,n.SU)(E)[4]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("赋值运算符")])),_:1},8,["modelValue"]),h,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[5],"onUpdate:modelValue":l[5]||(l[5]=e=>(0,n.SU)(E)[5]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("链式赋值")])),_:1},8,["modelValue"]),V,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[6],"onUpdate:modelValue":l[6]||(l[6]=e=>(0,n.SU)(E)[6]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("原地修改")])),_:1},8,["modelValue"]),q,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[7],"onUpdate:modelValue":l[7]||(l[7]=e=>(0,n.SU)(E)[7]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("原地修改的低优先级")])),_:1},8,["modelValue"]),W,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[8],"onUpdate:modelValue":l[8]||(l[8]=e=>(0,n.SU)(E)[8]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("奇怪的typeof")])),_:1},8,["modelValue"]),C,(0,t.Wm)((0,n.SU)(a.v),null,{default:(0,t.w5)((()=>[(0,t.Uk)('MDN中的解释：在 JavaScript 最初的实现中，JavaScript 中的值是由一个表示类型的标签和实际数据值表示的。对象的类型标签是 0。由于 null 代表的是空指针（大多数平台下值为 0x00），因此，null 的类型标签是 0，typeof null 也因此返回 "object"。详细内容请参考'),(0,t.Wm)((0,n.SU)(c.E2),{type:"primary",href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof#typeof_null"},{default:(0,t.w5)((()=>[(0,t.Uk)("MDN:typeof null")])),_:1})])),_:1}),Z,N,j,(0,t.Wm)((0,n.SU)(s.Z),{modelValue:(0,n.SU)(E)[9],"onUpdate:modelValue":l[9]||(l[9]=e=>(0,n.SU)(E)[9]=e)},{default:(0,t.w5)((()=>[(0,t.Uk)("typeof(...)")])),_:1},8,["modelValue"])],64))}};const E=x;var $=E},5572:function(e,l,o){o.d(l,{v:function(){return y}});var t=o(6901),n=o(8146),a=o(2371),c=o(3265),s=o(5580),d=o(3736);const u=e=>Object.keys(e);var p=o(7466);const i=["light","dark"],f=(0,d.o8)({title:{type:String,default:""},description:{type:String,default:""},type:{type:String,values:u(p.Rp),default:"info"},closable:{type:Boolean,default:!0},closeText:{type:String,default:""},showIcon:Boolean,center:Boolean,effect:{type:String,values:i,default:"light"}}),r={close:e=>e instanceof MouseEvent};var U=o(9847),m=o(9481);const S=(0,t.aZ)({name:"ElAlert"}),k=(0,t.aZ)({...S,props:f,emits:r,setup(e,{emit:l}){const o=e,{Close:d}=p.f5,u=(0,t.Rr)(),i=(0,m.s)("alert"),f=(0,n.iH)(!0),r=(0,t.Fl)((()=>p.Rp[o.type])),U=(0,t.Fl)((()=>[i.e("icon"),{[i.is("big")]:!!o.description||!!u.default}])),S=(0,t.Fl)((()=>({[i.is("bold")]:o.description||u.default}))),k=e=>{f.value=!1,l("close",e)};return(e,l)=>((0,t.wg)(),(0,t.j4)(a.uT,{name:(0,n.SU)(i).b("fade"),persisted:""},{default:(0,t.w5)((()=>[(0,t.wy)((0,t._)("div",{class:(0,c.C_)([(0,n.SU)(i).b(),(0,n.SU)(i).m(e.type),(0,n.SU)(i).is("center",e.center),(0,n.SU)(i).is(e.effect)]),role:"alert"},[e.showIcon&&(0,n.SU)(r)?((0,t.wg)(),(0,t.j4)((0,n.SU)(s.gn),{key:0,class:(0,c.C_)((0,n.SU)(U))},{default:(0,t.w5)((()=>[((0,t.wg)(),(0,t.j4)((0,t.LL)((0,n.SU)(r))))])),_:1},8,["class"])):(0,t.kq)("v-if",!0),(0,t._)("div",{class:(0,c.C_)((0,n.SU)(i).e("content"))},[e.title||e.$slots.title?((0,t.wg)(),(0,t.iD)("span",{key:0,class:(0,c.C_)([(0,n.SU)(i).e("title"),(0,n.SU)(S)])},[(0,t.WI)(e.$slots,"title",{},(()=>[(0,t.Uk)((0,c.zw)(e.title),1)]))],2)):(0,t.kq)("v-if",!0),e.$slots.default||e.description?((0,t.wg)(),(0,t.iD)("p",{key:1,class:(0,c.C_)((0,n.SU)(i).e("description"))},[(0,t.WI)(e.$slots,"default",{},(()=>[(0,t.Uk)((0,c.zw)(e.description),1)]))],2)):(0,t.kq)("v-if",!0),e.closable?((0,t.wg)(),(0,t.iD)(t.HY,{key:2},[e.closeText?((0,t.wg)(),(0,t.iD)("div",{key:0,class:(0,c.C_)([(0,n.SU)(i).e("close-btn"),(0,n.SU)(i).is("customed")]),onClick:k},(0,c.zw)(e.closeText),3)):((0,t.wg)(),(0,t.j4)((0,n.SU)(s.gn),{key:1,class:(0,c.C_)((0,n.SU)(i).e("close-btn")),onClick:k},{default:(0,t.w5)((()=>[(0,t.Wm)((0,n.SU)(d))])),_:1},8,["class"]))],64)):(0,t.kq)("v-if",!0)],2)],2),[[a.F8,f.value]])])),_:3},8,["name"]))}});var g=(0,U.Z)(k,[["__file","/home/runner/work/element-plus/element-plus/packages/components/alert/src/alert.vue"]]),_=o(9293);const y=(0,_.nz)(g)},4768:function(e,l,o){o.d(l,{E2:function(){return g}});var t=o(6901),n=o(3265),a=o(8146),c=o(5580),s=o(3736),d=o(7466);const u=(0,s.o8)({type:{type:String,values:["primary","success","warning","info","danger","default"],default:"default"},underline:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},href:{type:String,default:""},icon:{type:d.AA}}),p={click:e=>e instanceof MouseEvent};var i=o(9847),f=o(9481);const r=["href"],U=(0,t.aZ)({name:"ElLink"}),m=(0,t.aZ)({...U,props:u,emits:p,setup(e,{emit:l}){const o=e,s=(0,f.s)("link"),d=(0,t.Fl)((()=>[s.b(),s.m(o.type),s.is("disabled",o.disabled),s.is("underline",o.underline&&!o.disabled)]));function u(e){o.disabled||l("click",e)}return(e,l)=>((0,t.wg)(),(0,t.iD)("a",{class:(0,n.C_)((0,a.SU)(d)),href:e.disabled||!e.href?void 0:e.href,onClick:u},[e.icon?((0,t.wg)(),(0,t.j4)((0,a.SU)(c.gn),{key:0},{default:(0,t.w5)((()=>[((0,t.wg)(),(0,t.j4)((0,t.LL)(e.icon)))])),_:1})):(0,t.kq)("v-if",!0),e.$slots.default?((0,t.wg)(),(0,t.iD)("span",{key:1,class:(0,n.C_)((0,a.SU)(s).e("inner"))},[(0,t.WI)(e.$slots,"default")],2)):(0,t.kq)("v-if",!0),e.$slots.icon?(0,t.WI)(e.$slots,"icon",{key:2}):(0,t.kq)("v-if",!0)],10,r))}});var S=(0,i.Z)(m,[["__file","/home/runner/work/element-plus/element-plus/packages/components/link/src/link.vue"]]),k=o(9293);const g=(0,k.nz)(S)}}]);
//# sourceMappingURL=448.f35ea6d8.js.map