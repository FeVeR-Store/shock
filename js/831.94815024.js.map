{"version":3,"file":"js/831.94815024.js","mappings":"iTAWM,KAAEA,IAASC,EAAAA,EAAAA,KAAa,CAAEC,OAAQC,EAAMC,a,kMCR9C,MAAMC,EAAc,EAEpB,Q,4sBCiBA,MAAMC,EAAU,WAAeC,EAAa,aACtCC,EAAmB,eACnBC,GAAQC,EAAAA,EAAAA,IAAS,I,OACvBD,EAAM,GAAM,uBAAmBH,yDAIzBA,kCAEAC,6BAIAD,kCAEAC,eAEJC,oDAEAD,eAGFE,EAAM,GAAM,6BACZA,EAAM,GAAK,IACTE,EAAAA,EAAAA,MAAWC,MAAK,KACdC,OAAOC,YACLC,YAAW,KACbF,OAAOG,YAAYC,OAAO,GACzB,IAAI,I,usBC/CT,MAAM,EAAc,EAEpB,O","sources":["webpack://shock/./src/components/copyButton.vue","webpack://shock/./src/components/copyButton.vue?a121","webpack://shock/./src/components/helloWorld.vue","webpack://shock/./src/components/helloWorld.vue?d815"],"sourcesContent":["<template>\r\n    <el-button style=\"margin-left:20px\" @click=\"copy()\">复制{{props.modelValue}}</el-button>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClipboard } from \"@vueuse/core\";\r\nimport { ElButton } from \"element-plus\";\r\n//eslint-disable-next-line\r\nconst props = defineProps([\"modelValue\"]);\r\n//eslint-disable-next-line\r\nconst emit = defineEmits([\"update:modelValue\"]);\r\nconst { copy } = useClipboard({ source: props.modelValue });\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./copyButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./copyButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"h-1\">hello world！</div>\r\n  <p>\r\n    在编程界呢有一个习俗，就是学习一门语言之前，要用这门语言来表达自己的博大胸襟和宽广情怀，因为大家都是心怀世界的有志之士，所以一般用“hello World”。现在就我就教教你怎么做。\r\n  </p>\r\n  <p>\r\n    首先要清楚的是在哪里可以使用JavaScript，最常见的在HTML之中，在HTML几乎任何位置都可以使用JavaScript，你需要添加{{scriptTag}}{{scriptTagEnd}}标签，然后将代码放入其中。如果代码很长，你可以写到一个js文件里面，然后把js文件路径写到标签的src之中，听起来很难？别慌，很简单的。\r\n  </p>\r\n  <code-editor lang=\"html\" v-model=\"codes[0] \">在html中使用JavaScript</code-editor>\r\n  <!-- eslint-disable-next-line -->\r\n  <p>接下来我就教你一句代码：<div class=\"no-br\" data-help=\"console.log(message)|在终端输出message(内容),这里是输出hello World!\"><div class=\"no-br\" data-help=\"控制台 console|用于在控制台（在开发者工具中可见，按F12可以在console中找到输出内容）以各种形式输出内容进行调试，一般用于开发之中\">console</div>.<div class=\"no-br\" data-help=\"console.log(message)|在终端输出message(内容)\">log</div>(\"hello,World!\")</div><copy-button v-model=\"codes[1]\"/></p>\r\n  <p>然后将这句代码复制到下面的代码编辑器中运行，看看有什么效果吧。</p>\r\n  <code-editor v-model=\"codes[2]\">我的第一行JavaScript代码</code-editor>\r\n  <p>尝试好了吗，我知道你肯定满头雾水，别急，我来一点一点带你走入JavaScript的世界。</p>\r\n  \r\n</template>\r\n\r\n<script setup>\r\nimport {  nextTick, reactive } from \"vue\";\r\nimport copyButton from './copyButton.vue';\r\nimport codeEditor from \"./codeEditor.vue\"\r\n\r\nconst scriptTag='<scr' +'ipt>',scriptTagEnd='</scr'+'ipt>'\r\nconst scriptTagWithSrc = '<script src='\r\nconst codes = reactive([]);\r\ncodes[0] = `<!-- 在几乎任何位置都可以引入${scriptTag}标签，但不同位置的效果不同，这个以后会详细说 -->\r\n<html>\r\n\r\n<head>\r\n    ${scriptTag}\r\n        //JavaScript代码\r\n    ${scriptTagEnd}\r\n</head>\r\n\r\n<body>\r\n    ${scriptTag}\r\n        //JavaScript代码\r\n    ${scriptTagEnd}\r\n</body>\r\n${scriptTagWithSrc} src=\"xxx.js\">\r\n    //或者在xxx.js中写入JavaScript代码\r\n${scriptTagEnd}\r\n\r\n</html>`;\r\ncodes[1] = `console.log(\"hello World\")`;\r\ncodes[2] = ''\r\n  nextTick().then(() => {\r\n    window.setEditor()\r\n      setTimeout(() => {\r\n    window.pageLoading.close()\r\n  }, 500);\r\n  });\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./helloWorld.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./helloWorld.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["copy","useClipboard","source","props","modelValue","__exports__","scriptTag","scriptTagEnd","scriptTagWithSrc","codes","reactive","nextTick","then","window","setEditor","setTimeout","pageLoading","close"],"sourceRoot":""}