{"version":3,"file":"js/575.8b59c682.js","mappings":"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","sources":["webpack://shock/./node_modules/.pnpm/console-log-html@2.0.2/node_modules/console-log-html/console-log-html.js","webpack://shock/./src/components/codeEditor.vue","webpack://shock/./src/components/codeEditor.vue?74db","webpack://shock/../../packages/hooks/use-deprecated/index.ts","webpack://shock/../../packages/tokens/button.ts","webpack://shock/../../packages/components/button/src/use-button.ts","webpack://shock/../../packages/components/button/src/button.ts","webpack://shock/../../packages/components/button/src/button-custom.ts","webpack://shock/../../packages/components/button/src/button.vue","webpack://shock/../../packages/components/button/src/button-group.ts","webpack://shock/../../packages/components/button/src/button-group.vue","webpack://shock/../../packages/components/button/index.ts","webpack://shock/../../packages/constants/size.ts","webpack://shock/../../packages/hooks/use-prop/index.ts","webpack://shock/../../packages/hooks/use-common-props/index.ts","webpack://shock/../../packages/hooks/use-form-item/index.ts"],"sourcesContent":["/**\r\n * Redirects console output to an &lt;ul&gt; element\r\n * @namespace\r\n */\r\nvar ConsoleLogHTML = (function (original, methods, console, Object, TYPE_UNDEFINED, TYPE_BOOLEAN, INSTANCE_OBJECT_OBJECT) {\r\n    'use strict';\r\n    for (var i = 0; i < methods.length; i++) {\r\n        if (TYPE_UNDEFINED !== typeof console[methods[i]]) {\r\n            original[methods[i]] = console[methods[i]];\r\n        }\r\n    }\r\n\r\n    var originalSkipHtml = console.skipHtml,\r\n        originalKeys = Object.keys(original),\r\n        originalClear = TYPE_UNDEFINED !== typeof console.clear ? console.clear : false,\r\n        jQueryIsUp = typeof jQuery !== TYPE_UNDEFINED ? jQuery : false,\r\n        extend = function () {\r\n            var out = {},\r\n                i = 0,\r\n                j, keys;\r\n\r\n            for (; i < arguments.length; i++) {\r\n                keys = Object.keys(arguments[i]);\r\n                for (j = 0; j < keys.length; j++) {\r\n                    out[keys[j]] = arguments[i][keys[j]];\r\n                }\r\n            }\r\n\r\n            return out;\r\n        },\r\n        register = function (method, target, options, includeTimestamp, logToConsole, appendAtBottom) {\r\n\r\n            console.skipHtml[method] = function () {\r\n                original[method].apply(console, arguments);\r\n            };\r\n\r\n            console[method] = function () {\r\n                var finalMsg, msgPart, i, li;\r\n\r\n                finalMsg = \"\";\r\n                for (i = 0; i < arguments.length; i++) {\r\n                    msgPart = arguments[i] + \"\"; // \"safe toString()\" (works with null & undefined)\r\n                    if (msgPart === INSTANCE_OBJECT_OBJECT) {\r\n                        try {\r\n                            // Prefix with \"Object\" like in Firefox-, Chrome-, and node.js-output\r\n                            msgPart = \"Object \" + JSON.stringify(arguments[i]);\r\n                        } catch (e) {\r\n\r\n                        }\r\n                    }\r\n\r\n                    finalMsg += (i > 0 ? \" \" : \"\") + msgPart;\r\n                }\r\n\r\n                finalMsg = (includeTimestamp ? \"[\" + (new Date()).toLocaleTimeString() + \"] \" : \"\") + finalMsg;\r\n                li = document.createElement(\"li\");\r\n                li.setAttribute(\"data-level\", method);\r\n                li.innerText = finalMsg;\r\n                if (options[method]) {\r\n                    li.setAttribute(\"class\", options[method]);\r\n                }\r\n\r\n                if (appendAtBottom){\r\n                    target.appendChild(li);\r\n                } else {\r\n                    target.insertBefore(li, target.firstChild);\r\n                }\r\n\r\n                if (logToConsole) {\r\n                    console.skipHtml[method].apply(console, arguments);\r\n                }\r\n            };\r\n        };\r\n\r\n    return {\r\n        /**\r\n         * Default CSS classes\r\n         * @type Object\r\n         * @memberof ConsoleLogHTML\r\n         * @prop {?string} error=text-danger The default CSS class for error messages\r\n         * @prop {?string} warn=text-warning The default CSS class for warning messages\r\n         * @prop {?string} info=text-success The default CSS class for info messages\r\n         * @prop {?string} debug=text-info The default CSS class for debug messages\r\n         * @prop {?string} log=null The default CSS class for log messages\r\n         */\r\n        DEFAULTS: {\r\n            error: \"text-danger\",\r\n            warn: \"text-warning\",\r\n            info: \"text-success\",\r\n            debug: \"text-info\",\r\n            log: \"\"\r\n        },\r\n        /**\r\n         * Disconnect our console overrides, reverting to the original state\r\n         * @memberof ConsoleLogHTML\r\n         */\r\n        disconnect: function () {\r\n            console.skipHtml = originalSkipHtml;\r\n            for (var i = 0; i < originalKeys.length; i++) {\r\n                console[originalKeys[i]] = original[originalKeys[i]];\r\n            }\r\n            if (false !== originalClear) {\r\n                console.clear = originalClear;\r\n            }\r\n        },\r\n        /**\r\n         * Overwrite the original console.* methods and start outputting to screen\r\n         * @memberof ConsoleLogHTML\r\n         * @param {$|jQuery|HTMLUListElement} target The target &lt;ul&gt; element to output to. Can can either be a\r\n         * jQuery or vanilla JS HTMLUListElement.\r\n         * @param {Object} [options=ConsoleLogHTML.DEFAULTS] CSS class options. See {@link ConsoleLogHTML.DEFAULTS} for\r\n         * default values.\r\n         * @param {boolean} [includeTimestamp=true] Whether to include the log message timestamp in HTML\r\n         * @param {boolean} [logToConsole=true] Whether to continue logging to the console as well as HTML.\r\n         * @param {boolean} [appendAtBottom=false] Whether to append the log messages at the end of the ul-list\r\n         * @throws {Error} If target is not an &lt;ul&gt; element\r\n         */\r\n        connect: function (target, options, includeTimestamp, logToConsole, appendAtBottom) {\r\n            if (jQueryIsUp && target instanceof jQueryIsUp) {\r\n                target = target[0];\r\n            }\r\n            if (typeof logToConsole !== TYPE_BOOLEAN) {\r\n                logToConsole = true;\r\n            }\r\n            if (typeof includeTimestamp !== TYPE_BOOLEAN) {\r\n                includeTimestamp = true;\r\n            }\r\n            if (!(target instanceof HTMLUListElement)) {\r\n                throw new Error(\"The target must be a HTML <ul> element\");\r\n            } else {\r\n                options = extend(ConsoleLogHTML.DEFAULTS, options || {});\r\n\r\n                console.skipHtml = {};\r\n                for (var i = 0; i < originalKeys.length; i++) {\r\n                    register(originalKeys[i], target, options, includeTimestamp, logToConsole, appendAtBottom);\r\n                }\r\n\r\n                if (false !== originalClear) {\r\n                    console.clear = function () {\r\n                        target.innerText = \"\";\r\n                        originalClear.apply(console);\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    };\r\n})({}, [\"log\", \"debug\", \"info\", \"warn\", \"error\"], console, Object, \"undefined\", \"boolean\", '[object Object]');\r\n\r\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\r\n    module.exports = ConsoleLogHTML;\r\n}","<template>\r\n  <el-card>\r\n    <template #header>\r\n      {{ url }}<slot></slot>\r\n      <el-button\r\n        :data-help=\"`${\r\n          props.lang == 'html'\r\n            ? '新开窗口预览|在新窗口中运行这个html查看效果'\r\n            : '运行代码|运行这段JavaScript代码'\r\n        }`\"\r\n        @click=\"run()\"\r\n        circle\r\n        style=\"float: right\"\r\n        :icon=\"VideoPlay\"\r\n      ></el-button>\r\n    </template>\r\n    <div :style=\"`height:${height}px`\" ref=\"editorElement\"></div>\r\n    <el-card\r\n      v-show=\"showResult\"\r\n      :body-style=\"{ padding: '0px', paddingLeft: '35px' }\"\r\n      ><ul ref=\"result\"\r\n    /></el-card>\r\n  </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { VideoPlay } from \"@element-plus/icons-vue\";\r\n//eslint-disable-next-line\r\nimport { onMounted, ref } from \"vue\";\r\nimport * as console_html from \"console-log-html\";\r\nimport { useObjectUrl } from \"@vueuse/core\";\r\nimport { ElCard, ElButton } from \"element-plus\";\r\n\r\n//eslint-disable-next-line\r\nconst props = defineProps([\"modelValue\", \"lang\", \"innerData\"]);\r\n//eslint-disable-next-line\r\nconst emit = defineEmits([\"update:modelValue\"]);\r\nconst editorElement = ref();\r\nlet editor;\r\nconst result = ref();\r\nconst showResult = ref(false);\r\nconst height = ref();\r\nvar url;\r\nwindow.editor = editor;\r\nfunction run() {\r\n  if (props.lang == \"html\") {\r\n    url = useObjectUrl(\r\n      new Blob([props.modelValue], { type: \"text/html,charset=UTF-8\" })\r\n    );\r\n    window.open(url.value);\r\n  } else {\r\n    if (!showResult.value) showResult.value = true;\r\n    console_html.connect(result.value);\r\n    try {\r\n      if (props.innerData) {\r\n        new Function(...props.innerData?.names, props.modelValue)(\r\n          ...props.innerData?.func\r\n        );\r\n      } else {\r\n        new Function(props.modelValue)();\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console_html.disconnect();\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\nwindow.setEditorCallback.push(() => {\r\n    console.log(\"aaa\", window.monaco);\r\n    editor = window.monaco.editor.create(editorElement.value, {\r\n      value: props.modelValue,\r\n      language: props.lang ? props.lang : \"javascript\",\r\n      theme: \"vs-dark\",\r\n      scrollbar: false,\r\n      scrollBeyondLastColumn: false,\r\n      scrollBeyondLastLine: false,\r\n      editorOptions: {\r\n        automaticLayout: true, // 自动布局,\r\n        autoIndent: true, //自动缩进\r\n      },\r\n    });\r\n    height.value =\r\n      editor.getModel().getLineCount() *\r\n      editor.getOption(window.monaco.editor.EditorOption.lineHeight);\r\n    var callback = () => {\r\n      emit(\"update:modelValue\", editor.getValue());\r\n      height.value =\r\n        (editor.getModel().getLineCount() + 1) *\r\n        editor.getOption(window.monaco.editor.EditorOption.lineHeight);\r\n      editor.layout();\r\n      //   watch(() => editor, emit(\"update:modelValue\"));\r\n    };\r\n    editor.onDidChangeModelContent(() => {\r\n      callback();\r\n    });\r\n    setTimeout(() => {\r\n      editor\r\n        .getAction(\"editor.action.formatDocument\")\r\n        .run()\r\n        .then(() => {\r\n          emit(\"update:modelValue\", editor.getValue());\r\n          callback();\r\n        });\r\n    }, 500);\r\n  })\r\n});\r\n</script>\r\n\r\n<style>\r\n.text-danger {\r\n  color: var(--el-color-danger);\r\n}\r\n.text-warning {\r\n  color: var(--el-color-warning);\r\n}\r\n</style>\r\n","import script from \"./codeEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./codeEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./codeEditor.vue?vue&type=style&index=0&id=36b5d69a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { unref, watch } from 'vue'\nimport { debugWarn } from '@element-plus/utils'\n\nimport type { MaybeRef } from '@vueuse/core'\n\ntype DeprecationParam = {\n  from: string\n  replacement: string\n  scope: string\n  version: string\n  ref: string\n  type?: 'API' | 'Attribute' | 'Event' | 'Slot'\n}\n\nexport const useDeprecated = (\n  { from, replacement, scope, version, ref, type = 'API' }: DeprecationParam,\n  condition: MaybeRef<boolean>\n) => {\n  watch(\n    () => unref(condition),\n    (val) => {\n      if (val) {\n        debugWarn(\n          scope,\n          `[${type}] ${from} is about to be deprecated in version ${version}, please use ${replacement} instead.\nFor more detail, please visit: ${ref}\n`\n        )\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n}\n","import type { InjectionKey } from 'vue'\n\nimport type { ButtonProps } from '@element-plus/components/button'\n\nexport interface ButtonGroupContext {\n  size?: ButtonProps['size']\n  type?: ButtonProps['type']\n}\n\nexport const buttonGroupContextKey: InjectionKey<ButtonGroupContext> = Symbol(\n  'buttonGroupContextKey'\n)\n","import { Text, computed, inject, ref, useSlots } from 'vue'\nimport {\n  useDeprecated,\n  useDisabled,\n  useFormItem,\n  useGlobalConfig,\n  useSize,\n} from '@element-plus/hooks'\nimport { buttonGroupContextKey } from '@element-plus/tokens'\n\nimport type { SetupContext } from 'vue'\nimport type { ButtonEmits, ButtonProps } from './button'\n\nexport const useButton = (\n  props: ButtonProps,\n  emit: SetupContext<ButtonEmits>['emit']\n) => {\n  useDeprecated(\n    {\n      from: 'type.text',\n      replacement: 'link',\n      version: '3.0.0',\n      scope: 'props',\n      ref: 'https://element-plus.org/en-US/component/button.html#button-attributes',\n    },\n    computed(() => props.type === 'text')\n  )\n\n  const buttonGroupContext = inject(buttonGroupContextKey, undefined)\n  const globalConfig = useGlobalConfig('button')\n  const { form } = useFormItem()\n  const _size = useSize(computed(() => buttonGroupContext?.size))\n  const _disabled = useDisabled()\n  const _ref = ref<HTMLButtonElement>()\n  const slots = useSlots()\n\n  const _type = computed(() => props.type || buttonGroupContext?.type || '')\n  const autoInsertSpace = computed(\n    () => props.autoInsertSpace ?? globalConfig.value?.autoInsertSpace ?? false\n  )\n\n  // add space between two characters in Chinese\n  const shouldAddSpace = computed(() => {\n    const defaultSlot = slots.default?.()\n    if (autoInsertSpace.value && defaultSlot?.length === 1) {\n      const slot = defaultSlot[0]\n      if (slot?.type === Text) {\n        const text = slot.children as string\n        return /^\\p{Unified_Ideograph}{2}$/u.test(text.trim())\n      }\n    }\n    return false\n  })\n\n  const handleClick = (evt: MouseEvent) => {\n    if (props.nativeType === 'reset') {\n      form?.resetFields()\n    }\n    emit('click', evt)\n  }\n\n  return {\n    _disabled,\n    _size,\n    _type,\n    _ref,\n    shouldAddSpace,\n    handleClick,\n  }\n}\n","import { useSizeProp } from '@element-plus/hooks'\nimport { buildProps, iconPropType } from '@element-plus/utils'\nimport { Loading } from '@element-plus/icons-vue'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const buttonTypes = [\n  'default',\n  'primary',\n  'success',\n  'warning',\n  'info',\n  'danger',\n  /**\n   * @deprecated\n   * Text type will be deprecated in the next major version (3.0.0)\n   */\n  'text',\n  '',\n] as const\nexport const buttonNativeTypes = ['button', 'submit', 'reset'] as const\n\nexport const buttonProps = buildProps({\n  /**\n   * @description button size\n   */\n  size: useSizeProp,\n  /**\n   * @description disable the button\n   */\n  disabled: Boolean,\n  /**\n   * @description button type\n   */\n  type: {\n    type: String,\n    values: buttonTypes,\n    default: '',\n  },\n  /**\n   * @description icon component\n   */\n  icon: {\n    type: iconPropType,\n  },\n  /**\n   * @description native button type\n   */\n  nativeType: {\n    type: String,\n    values: buttonNativeTypes,\n    default: 'button',\n  },\n  /**\n   * @description determine whether it's loading\n   */\n  loading: Boolean,\n  /**\n   * @description customize loading icon component\n   */\n  loadingIcon: {\n    type: iconPropType,\n    default: () => Loading,\n  },\n  /**\n   * @description determine whether it's a plain button\n   */\n  plain: Boolean,\n  /**\n   * @description determine whether it's a text button\n   */\n  text: Boolean,\n  /**\n   * @description determine whether it's a link button\n   */\n  link: Boolean,\n  /**\n   * @description determine whether the text button background color is always on\n   */\n  bg: Boolean,\n  /**\n   * @description native button autofocus\n   */\n  autofocus: Boolean,\n  /**\n   * @description determine whether it's a round button\n   */\n  round: Boolean,\n  /**\n   * @description determine whether it's a circle button\n   */\n  circle: Boolean,\n  /**\n   * @description custom button color, automatically calculate `hover` and `active` color\n   */\n  color: String,\n  /**\n   * @description dark mode, which automatically converts `color` to dark mode colors\n   */\n  dark: Boolean,\n  /**\n   * @description automatically insert a space between two chinese characters\n   */\n  autoInsertSpace: {\n    type: Boolean,\n    default: undefined,\n  },\n} as const)\nexport const buttonEmits = {\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\n\nexport type ButtonProps = ExtractPropTypes<typeof buttonProps>\nexport type ButtonEmits = typeof buttonEmits\n\nexport type ButtonType = ButtonProps['type']\nexport type ButtonNativeType = ButtonProps['nativeType']\n\nexport interface ButtonConfigContext {\n  autoInsertSpace?: boolean\n}\n","import { computed } from 'vue'\nimport { TinyColor } from '@ctrl/tinycolor'\nimport { useDisabled, useNamespace } from '@element-plus/hooks'\nimport type { ButtonProps } from './button'\n\nexport function darken(color: TinyColor, amount = 20) {\n  return color.mix('#141414', amount).toString()\n}\n\nexport function useButtonCustomStyle(props: ButtonProps) {\n  const _disabled = useDisabled()\n  const ns = useNamespace('button')\n\n  // calculate hover & active color by custom color\n  // only work when custom color\n  return computed(() => {\n    let styles: Record<string, string> = {}\n\n    const buttonColor = props.color\n\n    if (buttonColor) {\n      const color = new TinyColor(buttonColor)\n      const activeBgColor = props.dark\n        ? color.tint(20).toString()\n        : darken(color, 20)\n\n      if (props.plain) {\n        styles = ns.cssVarBlock({\n          'bg-color': props.dark\n            ? darken(color, 90)\n            : color.tint(90).toString(),\n          'text-color': buttonColor,\n          'border-color': props.dark\n            ? darken(color, 50)\n            : color.tint(50).toString(),\n          'hover-text-color': `var(${ns.cssVarName('color-white')})`,\n          'hover-bg-color': buttonColor,\n          'hover-border-color': buttonColor,\n          'active-bg-color': activeBgColor,\n          'active-text-color': `var(${ns.cssVarName('color-white')})`,\n          'active-border-color': activeBgColor,\n        })\n\n        if (_disabled.value) {\n          styles[ns.cssVarBlockName('disabled-bg-color')] = props.dark\n            ? darken(color, 90)\n            : color.tint(90).toString()\n          styles[ns.cssVarBlockName('disabled-text-color')] = props.dark\n            ? darken(color, 50)\n            : color.tint(50).toString()\n          styles[ns.cssVarBlockName('disabled-border-color')] = props.dark\n            ? darken(color, 80)\n            : color.tint(80).toString()\n        }\n      } else {\n        const hoverBgColor = props.dark\n          ? darken(color, 30)\n          : color.tint(30).toString()\n        const textColor = color.isDark()\n          ? `var(${ns.cssVarName('color-white')})`\n          : `var(${ns.cssVarName('color-black')})`\n        styles = ns.cssVarBlock({\n          'bg-color': buttonColor,\n          'text-color': textColor,\n          'border-color': buttonColor,\n          'hover-bg-color': hoverBgColor,\n          'hover-text-color': textColor,\n          'hover-border-color': hoverBgColor,\n          'active-bg-color': activeBgColor,\n          'active-border-color': activeBgColor,\n        })\n\n        if (_disabled.value) {\n          const disabledButtonColor = props.dark\n            ? darken(color, 50)\n            : color.tint(50).toString()\n          styles[ns.cssVarBlockName('disabled-bg-color')] = disabledButtonColor\n          styles[ns.cssVarBlockName('disabled-text-color')] = props.dark\n            ? 'rgba(255, 255, 255, 0.5)'\n            : `var(${ns.cssVarName('color-white')})`\n          styles[ns.cssVarBlockName('disabled-border-color')] =\n            disabledButtonColor\n        }\n      }\n    }\n\n    return styles\n  })\n}\n","<template>\n  <button\n    ref=\"_ref\"\n    :class=\"[\n      ns.b(),\n      ns.m(_type),\n      ns.m(_size),\n      ns.is('disabled', _disabled),\n      ns.is('loading', loading),\n      ns.is('plain', plain),\n      ns.is('round', round),\n      ns.is('circle', circle),\n      ns.is('text', text),\n      ns.is('link', link),\n      ns.is('has-bg', bg),\n    ]\"\n    :aria-disabled=\"_disabled || loading\"\n    :disabled=\"_disabled || loading\"\n    :autofocus=\"autofocus\"\n    :type=\"nativeType\"\n    :style=\"buttonStyle\"\n    @click=\"handleClick\"\n  >\n    <template v-if=\"loading\">\n      <slot v-if=\"$slots.loading\" name=\"loading\" />\n      <el-icon v-else :class=\"ns.is('loading')\">\n        <component :is=\"loadingIcon\" />\n      </el-icon>\n    </template>\n    <el-icon v-else-if=\"icon || $slots.icon\">\n      <component :is=\"icon\" v-if=\"icon\" />\n      <slot v-else name=\"icon\" />\n    </el-icon>\n    <span\n      v-if=\"$slots.default\"\n      :class=\"{ [ns.em('text', 'expand')]: shouldAddSpace }\"\n    >\n      <slot />\n    </span>\n  </button>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useButton } from './use-button'\nimport { buttonEmits, buttonProps } from './button'\nimport { useButtonCustomStyle } from './button-custom'\n\ndefineOptions({\n  name: 'ElButton',\n})\n\nconst props = defineProps(buttonProps)\nconst emit = defineEmits(buttonEmits)\n\nconst buttonStyle = useButtonCustomStyle(props)\nconst ns = useNamespace('button')\nconst { _ref, _size, _type, _disabled, shouldAddSpace, handleClick } =\n  useButton(props, emit)\n\ndefineExpose({\n  /** @description button html element */\n  ref: _ref,\n  /** @description button size */\n  size: _size,\n  /** @description button type */\n  type: _type,\n  /** @description button disabled */\n  disabled: _disabled,\n  /** @description whether adding space */\n  shouldAddSpace,\n})\n</script>\n","import { buttonProps } from './button'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const buttonGroupProps = {\n  /**\n   * @description control the size of buttons in this button-group\n   */\n  size: buttonProps.size,\n  /**\n   * @description control the type of buttons in this button-group\n   */\n  type: buttonProps.type,\n} as const\nexport type ButtonGroupProps = ExtractPropTypes<typeof buttonGroupProps>\n","<template>\n  <div :class=\"`${ns.b('group')}`\">\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { provide, reactive, toRef } from 'vue'\nimport { buttonGroupContextKey } from '@element-plus/tokens'\nimport { useNamespace } from '@element-plus/hooks'\nimport { buttonGroupProps } from './button-group'\n\ndefineOptions({\n  name: 'ElButtonGroup',\n})\nconst props = defineProps(buttonGroupProps)\nprovide(\n  buttonGroupContextKey,\n  reactive({\n    size: toRef(props, 'size'),\n    type: toRef(props, 'type'),\n  })\n)\nconst ns = useNamespace('button')\n</script>\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Button from './src/button.vue'\nimport ButtonGroup from './src/button-group.vue'\n\nexport const ElButton = withInstall(Button, {\n  ButtonGroup,\n})\nexport const ElButtonGroup = withNoopInstall(ButtonGroup)\nexport default ElButton\n\nexport * from './src/button'\nexport type { ButtonInstance, ButtonGroupInstance } from './src/instance'\n","export const componentSizes = ['', 'default', 'small', 'large'] as const\n\nexport type ComponentSize = typeof componentSizes[number]\n\nexport const componentSizeMap = {\n  large: 40,\n  default: 32,\n  small: 24,\n} as const\n","import { computed, getCurrentInstance } from 'vue'\nimport type { ComputedRef } from 'vue'\n\nexport const useProp = <T>(name: string): ComputedRef<T | undefined> => {\n  const vm = getCurrentInstance()!\n  return computed(() => (vm.proxy?.$props as any)[name] ?? undefined)\n}\n","import { computed, inject, ref, unref } from 'vue'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { buildProp } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport { useProp } from '../use-prop'\nimport { useGlobalConfig } from '../use-global-config'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { MaybeRef } from '@vueuse/core'\n\nexport const useSizeProp = buildProp({\n  type: String,\n  values: componentSizes,\n  required: false,\n} as const)\n\nexport const useSize = (\n  fallback?: MaybeRef<ComponentSize | undefined>,\n  ignore: Partial<Record<'prop' | 'form' | 'formItem' | 'global', boolean>> = {}\n) => {\n  const emptyRef = ref(undefined)\n\n  const size = ignore.prop ? emptyRef : useProp<ComponentSize>('size')\n  const globalConfig = ignore.global ? emptyRef : useGlobalConfig('size')\n  const form = ignore.form\n    ? { size: undefined }\n    : inject(formContextKey, undefined)\n  const formItem = ignore.formItem\n    ? { size: undefined }\n    : inject(formItemContextKey, undefined)\n\n  return computed(\n    (): ComponentSize =>\n      size.value ||\n      unref(fallback) ||\n      formItem?.size ||\n      form?.size ||\n      globalConfig.value ||\n      ''\n  )\n}\n\nexport const useDisabled = (fallback?: MaybeRef<boolean | undefined>) => {\n  const disabled = useProp<boolean>('disabled')\n  const form = inject(formContextKey, undefined)\n  return computed(\n    () => disabled.value || unref(fallback) || form?.disabled || false\n  )\n}\n","import {\n  computed,\n  inject,\n  onMounted,\n  onUnmounted,\n  ref,\n  toRef,\n  watch,\n} from 'vue'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { useId } from '../use-id'\nimport type { FormItemContext } from '@element-plus/tokens'\nimport type { ComputedRef, Ref, WatchStopHandle } from 'vue'\n\nexport const useFormItem = () => {\n  const form = inject(formContextKey, undefined)\n  const formItem = inject(formItemContextKey, undefined)\n  return {\n    form,\n    formItem,\n  }\n}\n\nexport type IUseFormItemInputCommonProps = {\n  id?: string\n  label?: string | number | boolean | Record<string, any>\n}\n\nexport const useFormItemInputId = (\n  props: Partial<IUseFormItemInputCommonProps>,\n  {\n    formItemContext,\n    disableIdGeneration,\n    disableIdManagement,\n  }: {\n    formItemContext?: FormItemContext\n    disableIdGeneration?: ComputedRef<boolean> | Ref<boolean>\n    disableIdManagement?: ComputedRef<boolean> | Ref<boolean>\n  }\n) => {\n  if (!disableIdGeneration) {\n    disableIdGeneration = ref<boolean>(false)\n  }\n  if (!disableIdManagement) {\n    disableIdManagement = ref<boolean>(false)\n  }\n\n  const inputId = ref<string>()\n  let idUnwatch: WatchStopHandle | undefined = undefined\n\n  const isLabeledByFormItem = computed<boolean>(() => {\n    return !!(\n      !props.label &&\n      formItemContext &&\n      formItemContext.inputIds &&\n      formItemContext.inputIds?.length <= 1\n    )\n  })\n\n  // Generate id for ElFormItem label if not provided as prop\n  onMounted(() => {\n    idUnwatch = watch(\n      [toRef(props, 'id'), disableIdGeneration] as any,\n      ([id, disableIdGeneration]: [string, boolean]) => {\n        const newId = id ?? (!disableIdGeneration ? useId().value : undefined)\n        if (newId !== inputId.value) {\n          if (formItemContext?.removeInputId) {\n            inputId.value && formItemContext.removeInputId(inputId.value)\n            if (!disableIdManagement?.value && !disableIdGeneration && newId) {\n              formItemContext.addInputId(newId)\n            }\n          }\n          inputId.value = newId\n        }\n      },\n      { immediate: true }\n    )\n  })\n\n  onUnmounted(() => {\n    idUnwatch && idUnwatch()\n    if (formItemContext?.removeInputId) {\n      inputId.value && formItemContext.removeInputId(inputId.value)\n    }\n  })\n\n  return {\n    isLabeledByFormItem,\n    inputId,\n  }\n}\n"],"names":["ConsoleLogHTML","original","methods","console","Object","TYPE_UNDEFINED","TYPE_BOOLEAN","INSTANCE_OBJECT_OBJECT","i","length","originalSkipHtml","skipHtml","originalKeys","keys","originalClear","clear","jQueryIsUp","jQuery","extend","j","out","arguments","register","method","target","options","includeTimestamp","logToConsole","appendAtBottom","apply","finalMsg","msgPart","li","JSON","stringify","e","Date","toLocaleTimeString","document","createElement","setAttribute","innerText","appendChild","insertBefore","firstChild","DEFAULTS","error","warn","info","debug","log","disconnect","connect","HTMLUListElement","Error","module","exports","editorElement","ref","editor","result","showResult","height","url","run","props","lang","useObjectUrl","Blob","modelValue","type","window","open","value","console_html","innerData","Function","names","func","onMounted","setEditorCallback","push","monaco","create","language","theme","scrollbar","scrollBeyondLastColumn","scrollBeyondLastLine","editorOptions","automaticLayout","autoIndent","getModel","getLineCount","getOption","EditorOption","lineHeight","callback","emit","getValue","layout","onDidChangeModelContent","setTimeout","getAction","then","__exports__","useDeprecated","from","replacement","scope","version","condition","watch","unref","val","debugWarn","immediate","buttonGroupContextKey","Symbol","useButton","computed","buttonGroupContext","inject","globalConfig","useGlobalConfig","form","useFormItem","_size","useSize","size","_disabled","useDisabled","_ref","slots","useSlots","_type","autoInsertSpace","_a","_b","_c","shouldAddSpace","defaultSlot","default","call","slot","Text","text","children","test","trim","handleClick","evt","nativeType","resetFields","buttonTypes","buttonNativeTypes","buttonProps","buildProps","useSizeProp","disabled","Boolean","String","values","icon","iconPropType","loading","loadingIcon","Loading","plain","link","bg","autofocus","round","circle","color","dark","buttonEmits","click","MouseEvent","darken","amount","mix","toString","useButtonCustomStyle","ns","useNamespace","styles","buttonColor","TinyColor","activeBgColor","tint","cssVarBlock","cssVarName","cssVarBlockName","hoverBgColor","textColor","isDark","disabledButtonColor","name","buttonStyle","expose","buttonGroupProps","provide","reactive","toRef","ElButton","withInstall","Button","ButtonGroup","withNoopInstall","componentSizes","useProp","vm","getCurrentInstance","proxy","$props","buildProp","required","fallback","ignore","emptyRef","prop","global","formContextKey","formItem","formItemContextKey","useFormItemInputId","formItemContext","disableIdGeneration","disableIdManagement","inputId","idUnwatch","isLabeledByFormItem","label","inputIds","id","disableIdGeneration2","newId","useId","removeInputId","addInputId","onUnmounted"],"sourceRoot":""}